"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[148],{31505:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new cleaner object","params":[],"returns":[],"function_type":"static","source":{"line":55,"path":"src/init.lua"}},{"name":"give","desc":"Adds a task to the cleaner","params":[{"name":"task","desc":"","lua_type":"Task"},{"name":"finalizer?","desc":"If nil, it will check for a destroy method in an object if it\'s a table","lua_type":"Finalizer"},{"name":"...?","desc":"Optional arguments passed to the finalizer when called if they aren\'t overwritten by finalize","lua_type":"any"}],"returns":[{"desc":"Returns the passed task so you can write less code","lua_type":"Task"}],"function_type":"method","errors":[{"lua_type":"\\"No finalizer found for %s (typeof: %s)\\"","desc":""},{"lua_type":"\\"Attempted to add duplicate %s (typeof: %s)\\"","desc":""}],"source":{"line":83,"path":"src/init.lua"}},{"name":"has","desc":"Returns whether or not a task has been added to the cleaner","params":[{"name":"task","desc":"","lua_type":"Task"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":109,"path":"src/init.lua"}},{"name":"set","desc":"Adds a task and assigns a key to the task in the cleaner","params":[{"name":"key","desc":"","lua_type":"Key"},{"name":"task","desc":"","lua_type":"Task"},{"name":"...?","desc":"Optional arguments passed to the finalizer when called if they aren\'t overwritten by finalize","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Task"}],"function_type":"method","source":{"line":121,"path":"src/init.lua"}},{"name":"get","desc":"Gets the task assigned to the key","params":[{"name":"key","desc":"","lua_type":"Key"}],"returns":[{"desc":"","lua_type":"Task | nil"}],"function_type":"method","source":{"line":138,"path":"src/init.lua"}},{"name":"extract","desc":"Removes the task at the key from the task list","params":[{"name":"key","desc":"","lua_type":"Key"}],"returns":[{"desc":"","lua_type":"Task"}],"function_type":"method","errors":[{"lua_type":"\\"Key (%s) is not assigned to any task\\"","desc":""}],"source":{"line":150,"path":"src/init.lua"}},{"name":"finalize","desc":"Finalizes the task at the key and passes the args to the finalizer if included.\\nThis can yield if the finalizer yields.","params":[{"name":"key","desc":"","lua_type":"Key"},{"name":"...","desc":"Optional arguments that can be used to overwrite any that were included in the set call","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Task"}],"function_type":"method","errors":[{"lua_type":"\\"Key (%s) is not assigned to any task\\"","desc":""}],"yields":true,"source":{"line":174,"path":"src/init.lua"}},{"name":"work","desc":"Starts working on the task list. This can yield if any finalizers yield.","params":[],"returns":[],"function_type":"method","errors":[{"lua_type":"\\"Attempted to call work when already working\\"","desc":""}],"yields":true,"source":{"line":202,"path":"src/init.lua"}},{"name":"destroy","desc":"Alias for work but sets destroyed field to true","params":[],"returns":[],"function_type":"method","yields":true,"source":{"line":238,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"Task","desc":"Task that can be passed to a variety of methods that can be cleaned up","lua_type":"function | Instance | RbxScriptConnection | table | thread","source":{"line":26,"path":"src/init.lua"}},{"name":"Finalizer","desc":"Function or string that will point to a method that will be passed finalizer arguments","lua_type":"function | string","source":{"line":33,"path":"src/init.lua"}},{"name":"Key","desc":"Key that can be used to assign specific tasks","lua_type":"string | number | userdata | table","source":{"line":40,"path":"src/init.lua"}}],"name":"Cleaner","desc":"Cleaner class to make memory management more efficient and avoid leaks","source":{"line":46,"path":"src/init.lua"}}')}}]);